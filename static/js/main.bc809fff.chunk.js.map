{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Event","state","showMore","toggleShowMore","setState","event","this","props","className","summary","start","dateTime","timeZone","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","displayedEvents","errorText","handleInput","e","updateEventsLength","htmlFor","mockData","JSON","parse","stringify","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","defaultLocation","eventCount","locationEvents","mounted","slice","inputValue","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bc809fff.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Event extends Component{\r\n\r\n  state = {\r\n    showMore:false\r\n  }\r\n  // toggle state showMore\r\n  toggleShowMore = () => {\r\n    this.setState({\r\n      showMore:!this.state.showMore\r\n    });\r\n  }\r\n  render(){\r\n    const {event} = this.props;\r\n    return (\r\n    <div className='event-wrapper'>\r\n      <h1 className='event-title'>{event.summary}</h1>\r\n    \r\n    <div className='event-time'>\r\n      <span>{event.start.dateTime}</span>;\r\n          <span>{`(${event.start.timeZone})`}</span>\r\n      </div>\r\n      <div>\r\n        <span>{event.summary}</span>\r\n        <span>{event.location}</span>\r\n        </div>\r\n\r\n{this.state.showMore ? (\r\n  <div className ='show-more'>\r\n  <h4>About event</h4>\r\n  <a href ={event.htmlLink}>See details on Google Calendar</a>\r\n    <p className=\"event-description\">{event.description}</p>\r\n  </div>\r\n):''}\r\n  <div className='btn-wrapper'>\r\n    <button onClick={this.toggleShowMore}>{this.state.showMore \r\n    ? 'Show less' : 'Show more'}</button>\r\n    </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Event;\r\n\r\nEvent.propTypes ={\r\n  event:PropTypes.shape({\r\n    summary:PropTypes.string.isRequired,\r\n    start:PropTypes.shape({\r\n      dateTime:PropTypes.string.isRequired,\r\n      timeZone:PropTypes.string.isRequired\r\n    }).isRequired,\r\n    htmlLink:PropTypes.string.isRequired,\r\n    location:PropTypes.string.isRequired,\r\n    description:PropTypes.string.isRequired\r\n  })\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Event from './Event';\r\nclass EventList extends Component {\r\n render(){\r\n   const {events} =this.props;\r\n   return(\r\n    <ul className=\"EventList\">\r\n      {\r\n        this.props.events.map(event => \r\n          <li key={event.id}>\r\n            <Event event ={event}/>\r\n          </li>\r\n        )}\r\n    </ul>\r\n   )\r\n }\r\n}\r\nexport default EventList;\r\n\r\nEventList.propTypes ={\r\nevents:PropTypes.array.isRequired\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Alert extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return{\r\n      color:this.color,\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n    <div className='alert'>\r\n      <p style={this.getStyle()}>{this.props.text}</p>\r\n    </div>\r\n    )}\r\n}\r\n// Subclass of alert\r\nclass InfoAlert extends Alert{\r\nconstructor(props){\r\n  super(props);\r\n  this.color='blue';\r\n}\r\n}\r\nclass ErrorAlert extends Alert{\r\n  constructor(props){\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n// to use in Citysearch\r\nexport {InfoAlert,ErrorAlert};\r\nAlert.propTypes={\r\ntext:PropTypes.string.isRequired\r\n}","\r\nimport React ,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {InfoAlert} from './Alert';\r\nclass CitySearch extends Component{\r\n  state= {\r\n    query: '',\r\n    suggestions:[],\r\n    showSuggestions:undefined,\r\n    infoText:''\r\n  }\r\n  \r\n  //  event handler for <input> for the change event:\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n         query:value, \r\n        suggestions\r\n      });\r\n      if(value.length === 0){\r\n        this.setState({\r\n          showSuggestions:undefined\r\n        })\r\n      }else{\r\n        this.setState({\r\n          showSuggestions:true\r\n        })\r\n      }\r\n     if(suggestions.length === 0){\r\n       this.setState({\r\n         query:value,\r\n         infoText:\"We can't find the city you are looking for. Please try another city\"\r\n       })\r\n     }else {\r\n       return this.setState({\r\n         query:value,\r\n         suggestions,\r\n         infoText:''\r\n       })\r\n     }\r\n  }\r\n  handleItemClicked =(suggestion) => {\r\n    this.setState({\r\n      query:suggestion,\r\n      showSuggestions:undefined,\r\n      infoText:''\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"CitySearch\">\r\n       <h1>Meet App</h1>\r\n        <h2>Select a City</h2>\r\n        <InfoAlert text = {this.state.infoText}/>\r\n        <div className='suggestion-wrapper'>\r\n\r\n        <input type =\"text\" className=\"city\" value ={this.state.query} onChange ={this.handleInputChanged} onFocus ={() => {this.setState({showSuggestions:true}) }}/>\r\n        <ul className=\"suggestions\" style ={this.state.showSuggestions? {}:{display:'none'}}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key ={suggestion}\r\n            onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li onClick ={()=> this.handleItemClicked('all')}>\r\n            <b>see all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CitySearch;\r\nCitySearch.propTypes={\r\n  updateEvents:PropTypes.func.isRequired\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {ErrorAlert} from './Alert';\r\nclass NumberOfEvents extends Component{\r\n  state = {\r\n    displayedEvents:32,\r\n    errorText:''\r\n  }\r\n  handleInput = (e) => {\r\n    let value = e.target.value;\r\n    if (value === '' || value < 1){\r\n      this.setState({\r\n        displayedEvents:value,\r\n        errorText:'Please enter value greater than zero'\r\n      })\r\n      return false;\r\n    }else if(value > 32){ \r\n      this.setState({\r\n   displayedEvents:value,\r\n      errorText:'Please enter a number not greater than 32'\r\n      })\r\n      return false;\r\n   }\r\n   else{\r\n     this.setState({\r\n       displayedEvents:value,\r\n        errorText:''\r\n     })\r\n   \r\n    this.props.updateEventsLength(value);   \r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='events-number'>\r\n        <label htmlFor='events-number-input'>choose number of events to see</label>\r\n        <input type='number' id='events-number-input' value={this.state.displayedEvents} onChange={(e) => this.handleInput(e)}/>\r\n        <ErrorAlert text = {this.state.errorText}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default NumberOfEvents;\r\n\r\nNumberOfEvents.propTypes = {\r\n  updateEventsLength:PropTypes.func.isRequired\r\n}","const mockDataJson = [\r\n  {\r\n  \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n]\r\n// convert JSON to JS\r\nconst mockData =JSON.parse(JSON.stringify(mockDataJson));\r\nexport {mockData};","import {mockData} from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nexport const extractLocations = (events) => {\r\nvar extractLocations = events.map((event) => event.location);\r\nvar locations =[...new Set(extractLocations)];\r\nreturn locations;\r\n  };\r\n  const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\nexport const getEvents = async() =>{\r\n  NProgress.start();\r\n  if(window.location.href.startsWith('http://localhost')){\r\n    NProgress.done();\r\nreturn mockData;\r\n  }\r\n  //  if(!navigator.online){\r\n  //     const data =localStorage.getItem(\"lastEvents\");\r\n  //      NProgress.done();\r\n  //      return data?JSON.parse(events).events:[];;\r\n  //   }\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    removeQuery();\r\n    const url = \"https://1o29ypbgsa.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://1o29ypbgsa.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\nexport const getAccessToken = async ()=> {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken (accessToken));\r\n    if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const code = await searchParams.get('code');\r\n  if(!code){\r\n    const results = await axios.get(\r\n        \"https://1o29ypbgsa.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n  }\r\n","import React ,{Component} from 'react';\r\nimport './App.css';\r\n// imports the EventList component into the App component..\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents,extractLocations } from './api';\r\n\r\nclass App extends Component{\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    displayedEvents:32,\r\n    defaultLocation:'all'\r\n  }\r\n  componentDidMount() {\r\n  this.mounted = true;\r\n  getEvents().then((events)=> {\r\n    if(this.mounted){\r\n    this.setState({events:events.slice(0,this.state.displayedEvents),locations:extractLocations(events)});\r\n}\r\n});\r\n}\r\ncomponentWillUnmount(){\r\n  this.mounted = false;\r\n} \r\nupdateEvents = (location,eventCount) => {\r\ngetEvents().then((events) => {\r\n  const locationEvents = (location === 'all') ? \r\n  events:\r\n  events.filter((event)=> event.location === location);\r\n  if(this.mounted){\r\n    this.setState({\r\n    events:locationEvents.slice(0,eventCount),\r\n    defaultLocation:location\r\n  });\r\n}\r\n});\r\n}\r\nupdateEventsLength(inputValue){\r\n  this.setState({\r\n    displayedEvents:inputValue\r\n  });\r\n  const {defaultLocation} = this.state\r\n  this.updateEvents(defaultLocation,inputValue);\r\n}\r\nrender(){\r\nreturn (\r\n    <div className=\"App\">\r\n      <CitySearch locations ={this.state.locations} updateEvents ={this.updateEvents}/>\r\n      <EventList events ={this.state.events}/>\r\n      <NumberOfEvents updateEventsLength ={(value) => this.updateEventsLength(value)}/>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './service-worker';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport * as atatus from 'atatus-spa';\natatus.config('5a4d20eb57d849338536c24ce09f6cf8').install();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// serviceWorker.register();\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n"],"sourceRoot":""}